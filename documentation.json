{
    "pipes": [],
    "interfaces": [
        {
            "name": "Button",
            "id": "interface-Button-b745355ea2eb5dcf1875d77153e5cdf753d9639e45bcb300d0f16dbe9c8b087c2245a4c4ef7ccb3e85c58dde199e22503e94f1846132df5d2b952f886352becc",
            "file": "src/app/components/button/button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport interface Button {\n  textButton: string;\n}\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button (click)=\"onSelection.emit()\">\n      {{ textButton }}\n    </button>\n  `,\n  styles: [\n    `\n      button {\n        margin-right: 10px;\n        background-color: #ccc;\n        border: 1px solid rgb(118, 118, 118);\n        border-radius: 3px;\n        padding: 2px 5px;\n      }\n    `,\n  ],\n})\nexport class ButtonComponent {\n  @Input() textButton!: string; // opções da questão\n  @Output() onSelection = new EventEmitter<number>(); // quando o usuário selecionar uma opção, passa seu índice\n}\n",
            "properties": [
                {
                    "name": "textButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2ea514471cb5ed92a9a32e53bbc865f3f7869f09aa41dbdd3dda559d5e9cd67c5c8070e7d4bddd622a6173d00cf211206a08d43ce413c7b2c4f0d64cb779a712",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<app-tab></app-tab>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: `<app-tab></app-tab>`\n})\nexport class AppComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b745355ea2eb5dcf1875d77153e5cdf753d9639e45bcb300d0f16dbe9c8b087c2245a4c4ef7ccb3e85c58dde199e22503e94f1846132df5d2b952f886352becc",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [
                "\n      button {\n        margin-right: 10px;\n        background-color: #ccc;\n        border: 1px solid rgb(118, 118, 118);\n        border-radius: 3px;\n        padding: 2px 5px;\n      }\n    "
            ],
            "template": "<button (click)=\"onSelection.emit()\">\n  {{ textButton }}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "textButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onSelection",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nexport interface Button {\n  textButton: string;\n}\n\n@Component({\n  selector: 'app-button',\n  template: `\n    <button (click)=\"onSelection.emit()\">\n      {{ textButton }}\n    </button>\n  `,\n  styles: [\n    `\n      button {\n        margin-right: 10px;\n        background-color: #ccc;\n        border: 1px solid rgb(118, 118, 118);\n        border-radius: 3px;\n        padding: 2px 5px;\n      }\n    `,\n  ],\n})\nexport class ButtonComponent {\n  @Input() textButton!: string; // opções da questão\n  @Output() onSelection = new EventEmitter<number>(); // quando o usuário selecionar uma opção, passa seu índice\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      button {\n        margin-right: 10px;\n        background-color: #ccc;\n        border: 1px solid rgb(118, 118, 118);\n        border-radius: 3px;\n        padding: 2px 5px;\n      }\n    \n"
        },
        {
            "name": "TabComponent",
            "id": "component-TabComponent-b80bb21f23a47939f6189a9f76f525f18aed4a7176cf0f1d28916d0a15c95ce4940ec83709ad3ab76704db4eafa4584e29d04fc4133f3607c0610d35a355f147",
            "file": "src/app/components/tab/tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tab",
            "styleUrls": [],
            "styles": [
                "\n      .tabButtons {\n        width: 800px;\n        display: flex;\n        justify-content: space-between;\n        padding: 30px;\n      }\n      .tabPane {\n        width: 800px;\n        height: 200px;\n        background-color: #ccc;\n        border: solid 2px #000;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    "
            ],
            "template": "<div class=\"tabButtons\">\n  <app-button\n    *ngFor=\"let tabItem of tab; let i = index\"\n    [textButton]=\"tabItem.textButton\"\n    (onSelection)=\"select(i)\"\n  >\n  </app-button>\n</div>\n<div class=\"tabPane\">\n  <h1>\n    {{ tab[currentOption].textPane }}\n  </h1>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentOption",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "currentQuestion",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "tab",
                    "defaultValue": "[\n    {\n      textButton: 'Tab 1',\n      textPane: 'Texto Tab 1',\n    },\n    {\n      textButton: 'Tab 2',\n      textPane: 'Texto Tab 2',\n    },\n    {\n      textButton: 'Tab 3',\n      textPane: 'Texto Tab 3',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "optionIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAtualiza a opção selecionada pelo usuário.",
                    "description": "<p>Atualiza a opção selecionada pelo usuário.</p>\n",
                    "jsdoctags": [
                        {
                            "name": "optionIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tab',\n  template: `\n    <div class=\"tabButtons\">\n      <app-button\n        *ngFor=\"let tabItem of tab; let i = index\"\n        [textButton]=\"tabItem.textButton\"\n        (onSelection)=\"select(i)\"\n      >\n      </app-button>\n    </div>\n    <div class=\"tabPane\">\n      <h1>\n        {{ tab[currentOption].textPane }}\n      </h1>\n    </div>\n  `,\n  styles: [\n    `\n      .tabButtons {\n        width: 800px;\n        display: flex;\n        justify-content: space-between;\n        padding: 30px;\n      }\n      .tabPane {\n        width: 800px;\n        height: 200px;\n        background-color: #ccc;\n        border: solid 2px #000;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `,\n  ],\n})\nexport class TabComponent {\n  tab = [\n    {\n      textButton: 'Tab 1',\n      textPane: 'Texto Tab 1',\n    },\n    {\n      textButton: 'Tab 2',\n      textPane: 'Texto Tab 2',\n    },\n    {\n      textButton: 'Tab 3',\n      textPane: 'Texto Tab 3',\n    },\n  ];\n  currentQuestion = 0;\n  currentOption = 0;\n\n  /** Atualiza a opção selecionada pelo usuário. */\n  select(optionIndex: number) {\n    console.log('Aqui');\n    this.currentOption = optionIndex;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .tabButtons {\n        width: 800px;\n        display: flex;\n        justify-content: space-between;\n        padding: 30px;\n      }\n      .tabPane {\n        width: 800px;\n        height: 200px;\n        background-color: #ccc;\n        border: solid 2px #000;\n        border-radius: 8px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    \n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b7df2204dd5b9fcffa179b7d65b9e7c79e3bc56de5ee609071fa50ef8f3ade3b2fb0b326aaf2cd5527f9b013d168517f511f38248b6113a652eb4523f0763384",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { TabComponent } from './components/tab/tab.component';\n\n@NgModule({\n  declarations: [AppComponent, TabComponent, ButtonComponent],\n  imports: [BrowserModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TabComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ButtonComponent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\n  props: args,\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/components/button/Button.stories.ts": [
                {
                    "name": "ButtonComponent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\n  props: args,\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabComponent",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}